// <auto-generated />
using System;
using EgitimPortaliWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EgitimPortaliWebApi.Migrations
{
    [DbContext(typeof(EgitimPortaliContext))]
    partial class EgitimPortaliContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Article", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("TeacherId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Field", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Lecture", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Ects")
                        .HasColumnType("tinyint");

                    b.Property<short>("FieldId")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAdvanced")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("TeacherId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Student", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("FieldId")
                        .HasColumnType("smallint");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentNo")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Teacher", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ExperienceYear")
                        .HasColumnType("tinyint");

                    b.Property<short>("FieldId")
                        .HasColumnType("smallint");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("graduateUniversity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.Property<short>("LecturesId")
                        .HasColumnType("smallint");

                    b.Property<short>("StudentsId")
                        .HasColumnType("smallint");

                    b.HasKey("LecturesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("LecturesStudents", (string)null);
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Article", b =>
                {
                    b.HasOne("EgitimPortaliWebApi.Data.Models.Teacher", "Teacher")
                        .WithMany("Articles")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Lecture", b =>
                {
                    b.HasOne("EgitimPortaliWebApi.Data.Models.Field", "Field")
                        .WithMany("Lectures")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EgitimPortaliWebApi.Data.Models.Teacher", "Teacher")
                        .WithMany("Lectures")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Student", b =>
                {
                    b.HasOne("EgitimPortaliWebApi.Data.Models.Field", "Field")
                        .WithMany("Students")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Teacher", b =>
                {
                    b.HasOne("EgitimPortaliWebApi.Data.Models.Field", "Field")
                        .WithMany("Teachers")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.HasOne("EgitimPortaliWebApi.Data.Models.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LecturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EgitimPortaliWebApi.Data.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Field", b =>
                {
                    b.Navigation("Lectures");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("EgitimPortaliWebApi.Data.Models.Teacher", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Lectures");
                });
#pragma warning restore 612, 618
        }
    }
}
